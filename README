The s-tri-pd branch is implementing a collection of primal-dual coordinate
descent methods.

------------------------------------------

Coordinate descent solver based on Olivier Fercoq and Pascal Bianchi, "A coordinate descent primal-dual algorithm with large step size and possibly non separable functions." arXiv preprint arXiv:1508.04625 (2015).

The user defines an optimization problem of the form
min_x sum_j cf[j] * f[j](Af[j] * x - bf[j]) + sum_i cg[i] * g[i](Dg[i] * x[i] - bg[i]) + sum_l ch[l] * h[l](Ah[l] * x - ch[l])
where f[j] is differentiable and g[i] and h[l] have simple proximal operators.

The vectors and matrices are entered as arrays or lists.
The functions are given as three lists of strings. Each string corresponds to a pre-compiled atom
which can compute the function value, gradient, Lipschitz constant of the gradient and proximal operator.
When the functions are not separable, the arguments blocks, blocks_h and blocks_f may be used.

Examples are provided in the file test.py

The solver solves the optimization problem using a coordinate descent method. Under the hood, efficient residual updates and duplication of dual variables are performed.

More information in the paper A generic coordinate descent solver for nonsmooth convex optimization https://arxiv.org/abs/1812.00628.

Copyright Olivier Fercoq -- Telecom ParisTech

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
